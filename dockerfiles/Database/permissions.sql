-- -- Create custom user
-- CREATE USER expense WITH PASSWORD 'Admin@123';

-- -- Create database owned by expense
-- CREATE DATABASE expensetracker OWNER expense;

-- -- Grant privileges on database
-- GRANT CONNECT ON DATABASE expensetracker TO expense;

-- -- Connect to expensetracker
-- \c expensetracker;

-- -- Grant schema privileges
-- GRANT USAGE ON SCHEMA public TO expense;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO expense;
-- ALTER DEFAULT PRIVILEGES IN SCHEMA public 
--     GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO expense;

-- -- Create table 'entry'
-- CREATE TABLE public.entry (
--     id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
--     amount DOUBLE PRECISION NOT NULL,
--     date DATE,
--     description VARCHAR(255),
--     type VARCHAR(255)
-- );



-- Create custom user if not exists
SELECT 'CREATE USER expense WITH PASSWORD ''Admin@123''' 
WHERE NOT EXISTS (
    SELECT FROM pg_roles WHERE rolname = 'expense'
)\gexec

-- Create database if not exists
SELECT 'CREATE DATABASE expensetracker OWNER expense' 
WHERE NOT EXISTS (
    SELECT FROM pg_database WHERE datname = 'expensetracker'
)\gexec

-- Connect to expensetracker
\connect expensetracker

-- Grant privileges on database
GRANT CONNECT ON DATABASE expensetracker TO expense;

-- Grant schema privileges
GRANT USAGE ON SCHEMA public TO expense;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO expense;

ALTER DEFAULT PRIVILEGES IN SCHEMA public 
    GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO expense;

-- Create table 'entry' if not exists
CREATE TABLE IF NOT EXISTS public.entry (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    amount DOUBLE PRECISION NOT NULL,
    date DATE,
    description VARCHAR(255),
    type VARCHAR(255)
);
